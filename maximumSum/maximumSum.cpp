#include <gtest/gtest.h>

int getMaxSum(std::vector<int> nums)
{
    int maxSum = 0;
    int sum;
    for (int i = 0; i < nums.size(); i++)
    {
        sum = 0;
        for (int j = i; j < nums.size(); j++)
        {
            sum += nums[j];
            if (sum > maxSum)
                maxSum = sum;
        }
    }
    return maxSum;
}

TEST(MaxSumTest, HandlesNoNumsInput)
{
    std::vector<int> nums;
    EXPECT_EQ(getMaxSum(nums), 0);
}

TEST(MaxSumTest, HandlesPosNumInput)
{
    EXPECT_EQ(getMaxSum({1}), 1);
}

TEST(MaxSumTest, HandlesNegNumInput)
{
    EXPECT_EQ(getMaxSum({-1}), 0);
}

TEST(MaxSumTest, HandlesPosNumsInput)
{
    EXPECT_EQ(getMaxSum({2, 4, 6}), 12);
}

TEST(MaxSumTest, HandlesNegNumsInput)
{
    EXPECT_EQ(getMaxSum({-2, -4, -6}), 0);
}

TEST(MaxSumTest, HandlesPosNumAndNegNumInput)
{
    EXPECT_EQ(getMaxSum({1, -1}), 1);
}

TEST(MaxSumTest, HandlesSeriesOfPosNumsInput)
{
    EXPECT_EQ(getMaxSum({-1, 1, 2, -1}), 3);
}

TEST(MaxSumTest, HandlesBiggestSeriesOfPosNumsInput)
{
    EXPECT_EQ(getMaxSum({-1, 1, 2, -8, 3, 4}), 7);
}

TEST(MaxSumTest, HandlesBiggestSeriesInput)
{
    EXPECT_EQ(getMaxSum({3, 4, -1, -1, 1, 2}), 8);
}

TEST(MaxSumTest, HandlesInput)
{
    EXPECT_EQ(getMaxSum({3, -10, 4, -1, 2, 3, 6, -7}), 14);
    EXPECT_EQ(getMaxSum({1, -9, 0, -8, 76, 5, 43}), 124);
    EXPECT_EQ(getMaxSum({-1, -9, 0, -8, 76, 5, 43}), 124);
    EXPECT_EQ(getMaxSum({10, -9, 0, -8, 76, 5, -40, 43}), 84);
    EXPECT_EQ(getMaxSum({10, -9, 0, 8, 3, -1, -4, 6}), 13);
    EXPECT_EQ(getMaxSum({-1, -9, 0, 8, -76, 5, 3}), 8);
    EXPECT_EQ(getMaxSum({-1, -9, -4, -8, -1, -2}), 0);
    EXPECT_EQ(getMaxSum({99, 72, -49, -26, -54, 10, -78, -2, -80, 60, -80, 94,
                         58, -53, 18, -95, 40, -26, 16, -26, -54, -68, 77, -57,
                         27, -76, 6, -35, 21, 25, -60, -84, 59, 24, -70, -24,
                         14, -70, 94, 26, 63, -88, 2, 46, -19, -83, 30, -84,
                         -77, -96, -89, -50, -87, -3, 83, -31, 78, 35, 15, -20,
                         10, 97, -82, -45, -86, -55, 22, 19, 20, -78, -42, -45,
                         7, 45, -3, 15, 88, -97, 78, -90, 48, 12, 29, -65, 18,
                         8, 93, -49, -48, 51, 84, 18, 8, -54, 21, 12, -93, -68,
                         -9, -65, 49, 59, -78, 15, 45, 4, -87, 82, -60, 53, -77,
                         -46, -48, 45, -80, 96, -99, 81, 39, -25, -43, -12, 67,
                         97, 85, 67, -17, -16, 10, 65, -71, -28, 30, 30, -85,
                         -81, -42, -5, -19, -55, -53, -73, 76, -20, -21, 20, 72,
                         -87, 81, 51, -79, 67, -15, 65, -28, 19, -59, -96, 38,
                         -19, -6, -27, -38, 49, 55, -38, -53, -86, 90, 61, 67,
                         23, -55, -98, 23, -81, 34, 64, -93, -86, -82, 41, -89,
                         20, -29, 99, -33, -42, 56, -54, 24, -59, 14, -79, 40,
                         -6, 49, -63, 77, -41, 65, -15, 49, -4, -24, -16, -95,
                         61, -34, 68, -75, -33, -14, 92, 10, 39, 36, -97, -62,
                         -53, 57, 39, 59, -47, -34, -83, 75, -76, 0, 22, -30,
                         28, -19, 42, -44, -50, 68, 5, 80, -25, 66, 38, 2, -88,
                         42, 90, 82, -57, 2, -21, -19, -63, -46, 17, -88, -29,
                         -68, -5, 98, 5, 14, 95, 96, 22, -60, 85, -98, -38, -66,
                         -37, 43, 92, -46, -20, 67, -11, 5, -98, -59, -68, 62,
                         -36, -76, 85, 18, -89, 41, -41, -78, -68, -12, 82, 69,
                         -52, 64, -98, -8, 1, -33, 83, 14, 19, 76, -2, 28, -1,
                         -46, 13, -25, -99, -44, 24, -78, -25, -14, 30, 40, -1,
                         -50, 84, -30, 16, 73, 44, 99, 49, -78, 66, -96, 67, 5,
                         98, -34, -22, 33, 100, -36, -59, -95, -24, -4, 34, 39,
                         -25, -26, -63, -68, 36, 73, 93, 5, 41, 65, 49, 23, -81,
                         52, -84, 9, -58, 39, -11, -19, 46, 32, 42, -58, -51,
                         -95, -28, -32, 51, 33, 53, 42, 12, -43, -6, 3, 42, -7,
                         -15, -38, -94, -89, -74, -38, 34, 17, 58, -80, 29, 59,
                         4, -40, 97, -45, -42, -14, 85, -34, -23, -59, -40, -2,
                         82, 7, 54, 73, -72, 7, 27, 61, 79, -55, -73, 84, -47,
                         49, 11, -3, 23, 40, 11, 94, -29, -24, -61, -97, -47,
                         48, 36, -28, 2, -44, -96, -30, 86, 10, 35, -75, -90,
                         -65, -53, 97, 76, -74, 38, -61, 47, 34, -28, 59, 49,
                         -52, 1, -24, 8, -11, 77, -92, -72, -76, 9, 71, -8, 47,
                         26, 64, 73, -9, 43, -89, -54, -87, 72, 55, 4, -52, -23,
                         -26, -50, 76, -92, -57, -98, -22, -55, 0, -48, 49, -78,
                         -81, 77, 26, -22, 61, 77, 54, -12}),
              551);
}
